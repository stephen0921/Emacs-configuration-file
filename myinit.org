* interface tweaks
#+BEGIN_SRC emacs-lisp
(setq inhibit-startup-message t)
(tool-bar-mode -1)
(defalias 'list-buffers 'ibuffer) ; make ibuffer default
(defalias 'list-buffers 'ibuffer-other-window) ; make ibuffer default
(defalias 'yes-or-no-p 'y-or-n-p)
#+END_SRC
* try
#+BEGIN_SRC emacs-lisp
(use-package try
	:ensure t)
#+END_SRC
* which key
#+BEGIN_SRC emacs-lisp
(use-package which-key
	:ensure t 
	:config
	(which-key-mode))
#+END_SRC
* Org mode
#+BEGIN_SRC emacs-lisp
(use-package org-bullets
  :ensure t
  :config
  (add-hook 'org-mode-hook (lambda () (org-bullets-mode 1))))

#+END_SRC
* Ace windows for easy window switching
#+BEGIN_SRC emacs-lisp
(use-package ace-window
  :ensure t
  :init
  (progn
    (global-set-key [remap other-window] 'ace-window)
    (custom-set-faces
     '(aw-leading-char-face
       ((t (:inherit ace-jump-face-foreground :height 3.0))))) 
    ))

(windmove-default-keybindings)
(winner-mode 1)
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(package-selected-packages
   (quote
    (molokai-theme counsel ace-window which-key use-package try))))
(custom-set-faces
 '(aw-leading-char-face ((t (:inherit ace-jump-face-foreground :height 3.0)))))
#+END_SRC
* Swiper / Ivy / Counsel
#+BEGIN_SRC emacs-lisp
;; it looks like counsel is a requirement for swiper
(use-package counsel
  :ensure t
  )

(use-package swiper
  :ensure try
  :config
  (progn
    (ivy-mode 1)
    (setq ivy-use-virtual-buffers t)
    (global-set-key "\C-s" 'swiper)
    (global-set-key (kbd "C-c C-r") 'ivy-resume)
    (global-set-key (kbd "<f6>") 'ivy-resume)
    (global-set-key (kbd "M-x") 'counsel-M-x)
    (global-set-key (kbd "C-x C-f") 'counsel-find-file)
    (global-set-key (kbd "<f1> f") 'counsel-describe-function)
    (global-set-key (kbd "<f1> v") 'counsel-describe-variable)
    (global-set-key (kbd "<f1> l") 'counsel-load-library)
    (global-set-key (kbd "<f2> i") 'counsel-info-lookup-symbol)
    (global-set-key (kbd "<f2> u") 'counsel-unicode-char)
    (global-set-key (kbd "C-c g") 'counsel-git)
    (global-set-key (kbd "C-c j") 'counsel-git-grep)
    (global-set-key (kbd "C-c k") 'counsel-ag)
    (global-set-key (kbd "C-x l") 'counsel-locate)
    (global-set-key (kbd "C-S-o") 'counsel-rhythmbox)
    (define-key read-expression-map (kbd "C-r") 'counsel-expression-history)
    ))
#+END_SRC
* Avy - navigate by searching for a letter on the screen and jumping to it
#+BEGIN_SRC emacs-lisp
(use-package avy
  :ensure t
  :bind ("M-s" . avy-goto-char))
#+END_SRC
* Autocomplete
#+BEGIN_SRC emacs-lisp
;(use-package auto-complete
;  :ensure t
;  :init
;  (progn
;    (ac-config-default)
;    (global-auto-complete-mode t)
;    ))
#+END_SRC
* Company
#+BEGIN_SRC emacs-lisp
  (use-package company
    :ensure t
    :config
    (add-hook 'after-init-hook 'global-company-mode))
#+END_SRC
* Yasnippet
#+BEGIN_SRC emacs-lisp
(use-package yasnippet
  :ensure t
  :init
    (yas-global-mode 1))
#+END_SRC
* Themes
#+BEGIN_SRC emacs-lisp
(use-package molokai-theme
  :ensure t
  :config (load-theme 'molokai t))
;(use-package color-theme
;  :ensure t)
;(use-package moe-theme
;  :ensure t)
;(moe-dark)
#+END_SRC
* Reveal.js
#+BEGIN_SRC emacs-lisp 
(use-package ox-reveal
:ensure ox-reveal)

(setq org-reveal-root "http://cdn.jsdelivr.net/reveal.js/3.0.0/")
(setq org-reveal-mathjax t)

(use-package htmlize
:ensure t)
#+END_SRC
* Org Blog
#+BEGIN_SRC emacs-lisp

(setq org-publish-project-alist
      '(("org-ianbarton"
          ;; Path to your org files.
          :base-directory "/cygdrive/e/ref/blog/myproject/org/"
          :base-extension "org"

          ;; Path to your Jekyll project.
          :publishing-directory "/cygdrive/e/git/stephen0921.github.io/"
          :recursive t
          :publishing-function org-html-publish-to-html
          :headline-levels 4 
          :html-extension "html"
          :body-only t ;; Only export section between <body> </body>
    )


    ("org-static-ian"
          :base-directory "/cygdrive/e/ref/blog/myproject/org/"
          :base-extension "css\\|js\\|png\\|jpg\\|gif\\|pdf\\|mp3\\|ogg\\|swf\\|php"
          :publishing-directory "/cygdrive/e/git/stephen0921.github.io/"
          :recursive t
          :publishing-function org-publish-attachment)

    ("x" :components ("org-ianbarton" "org-static-ian"))))

#+END_SRC
* Python
#+BEGIN_SRC emacs-lisp
    (use-package elpy
      :ensure t
      :config
      (progn
	(elpy-enable)
	(setq elpy-rpc-backend "jedi")))

#+END_SRC
